{"version":3,"sources":["Api.js"],"names":["Api","express","middleware","routes","use","json","urlencoded","extended","produceRouter","path","router"],"mappings":";;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;IACqBA,G;;AAInB;AACA;AACA;AACA,iBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,wBAAf;AACA,SAAKC,UAAL;AACA,SAAKC,MAAL;AACD;;AAED;AACA;;AAbA;;;;;iCAcmB;AACjB,WAAKF,OAAL,CAAaG,GAAb,CAAiB,sBAAO,KAAP,CAAjB;AACA,WAAKH,OAAL,CAAaG,GAAb,CAAiB,qBAAWC,IAAX,EAAjB;AACA,WAAKJ,OAAL,CAAaG,GAAb,CAAiB,qBAAWE,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAjB;AACD;;AAED;;;;6BACe;AACf;AACE,UAAMC,gBAAgB,6BAAtB;AACF;AACE,WAAKP,OAAL,CAAaG,GAAb,CAAiBI,cAAcC,IAA/B,EAAqCD,cAAcE,MAAnD;AACD;;;;;;kBA3BkBV,G","file":"Api.js","sourcesContent":["// @flow\n\nimport express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport ProduceRouter from './routers/ProduceRouter';\n\n// First, we create a field reference for the Api.express property,\n// and tell Flow that it will be an object of type express$Application from Express.\nexport default class Api {\n  // annotate with the express $Application type\n  express: express$Application;\n\n  // create the express instance, attach app-level middleware, attach routers\n  // The constructor initializes an instance of Express, and attaches it to the instance of Api.\n  // Then it calls the other two methods, Api.middleware and Api.routes.\n  constructor() {\n    this.express = express();\n    this.middleware();\n    this.routes();\n  }\n\n  // register middlewares\n  // Api.middleware - Initializes and attaches our middleware modules to the app.\n  middleware(): void {\n    this.express.use(morgan('dev'));\n    this.express.use(bodyParser.json());\n    this.express.use(bodyParser.urlencoded({extended: false}));\n  }\n\n  // connect resource routers\n  routes(): void {\n  // create an instance of ProduceRouter\n    const produceRouter = new ProduceRouter();\n  // attach it to our express app\n    this.express.use(produceRouter.path, produceRouter.router);\n  }\n}\n"]}